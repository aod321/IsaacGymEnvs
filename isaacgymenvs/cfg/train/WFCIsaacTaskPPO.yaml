params:
  seed: ${...seed}

  algo:
    name: a2c_discrete

  model:
    name: discrete_a2c

  network:
    name: resnet_actor_critic
    # 需要reward作为模型输入
    require_rewards: False
    require_last_actions: False
    separate: False
    value_shape: 1
    space: 
      discrete:

    cnn:
      permute_input: False
      conv_depths: [16, 32, 32]
      activation: relu
      initializer:
        name: default
      regularizer:
        name: 'None'
      
    mlp:
      units: [512]
      activation: relu
      regularizer:
        name: 'None'
      initializer:
        name: default 

        #rnn:
        #name: lstm
        #units: 256
        #layers: 1

  load_checkpoint: ${if:${...checkpoint},True,False} # flag which sets whether to load the checkpoint
  load_path: ${...checkpoint} # path to the checkpoint to load

  config:
    reward_shaper:
      min_val: 0
      max_val: 1
      scale_value: 1
    name: ${resolve_default:WFCIsaacTask,${....experiment}}
    full_experiment_name: ${.name}
    env_name: rlgpu
    multi_gpu: ${....multi_gpu}
    ppo: True
    normalize_input: False
    normalize_value: True
    value_bootstrap: True
    num_actors: ${....task.env.numEnvs}
    normalize_advantage: True
    gamma: 0.99
    tau: 0.95
    learning_rate: 3e-4
    lr_schedule: adaptive
    schedule_type: legacy
    kl_threshold: 0.008
    score_to_win: 20000
    max_epochs: ${resolve_default:2000,${....max_iterations}}
    save_best_after: 200
    save_frequency: 50
    grad_norm: 1.0
    entropy_coef: 0.01
    truncate_grads: False
    e_clip: 0.2
    horizon_length: 128
    minibatch_size: 256
    mini_epochs: 2
    critic_coef: 1
    clip_value: None
    seq_len: 4
    bounds_loss_coef: 0.0001
    use_diagnostics: True
    seq_length: 4
